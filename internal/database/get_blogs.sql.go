// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: get_blogs.sql

package database

import (
	"context"
	"database/sql"

	"github.com/google/uuid"
)

const getBlogs = `-- name: GetBlogs :many

SELECT blog_id, title, summary, published_at, slug
FROM blogs
WHERE status='published'
ORDER BY published_at DESC
`

type GetBlogsRow struct {
	BlogID      uuid.UUID
	Title       string
	Summary     string
	PublishedAt sql.NullTime
	Slug        string
}

func (q *Queries) GetBlogs(ctx context.Context) ([]GetBlogsRow, error) {
	rows, err := q.db.QueryContext(ctx, getBlogs)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetBlogsRow
	for rows.Next() {
		var i GetBlogsRow
		if err := rows.Scan(
			&i.BlogID,
			&i.Title,
			&i.Summary,
			&i.PublishedAt,
			&i.Slug,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
